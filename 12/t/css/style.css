/* Підключення шрифтів */
@import url("fonts.css");

/* Скидання стилів */
@import url("reset.css");

/* Основні стилі */
body {
	background-color: #333;
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	color: #fff;
}
.wrapper {
	min-height: 100%;
	overflow: clip;
}

.block-1,
.block-2,
.block-3 {
	padding: 15px;
	text-align: center;
	text-transform: uppercase;
}
.block-1 {
	background-color: #794f45;
}
.block-2 {
	background-color: #77608d;
}
.block-3 {
	background-color: #7a956b;
}

/* 
Різне CSS позиціонування дуже часто 
використовується при верстці сучасних макетів 
і відкриває для нас нові цікаві можливості 
розташування елементів у потоці. 
Але треба бути обережними та вміти поводитися 
з цими можливостями грамотно.

Модуль позіціонування:
Основна властивість - position 
А також властивості розташування
top,
left,
right,
bottom
а також z-index

Значення властивості position
static - (за замовченням) статичне позиціонування
relative - відносне позіціонування
absolute - абсолютне позіціонування
fixed - фіксоване позіціонування
sticky - липке позіціонування 
(гібрідне поєднання значень static та fixed)

(!) Властивості top, left, right, bottom та z-index 
працюють тільки зі значеннями position
відмінними від static

z-index - керує положенням об'єкту по осі Z
auto - (за замовченням) ближчим буде об'єкт який нижче по коду
число від 0 до 9999(?) - порядковий номер на осі Z
Не впливає на позіціонування батьківського об'єкту у якого 
position відмінний від static


При позиціонуванні елементу вказавши значення для top, 
bottom перестає працювати. 
Так само це працює з left та right. При цьому, 
якщо таки ж вказати обидві властивості то 
пріоритетними будуть: 
по Y top, а по X left. 
Гарною практикою є вказання значень лише для 
однієї властивості на вісь. 
*/

/* 
relative - відносне позиціонування. 
Об'єкт позіціонується відносно свого 
поточного місця положення.
(відносно свого положення в коді)

Для позиціонування об'єкту (з position: relative;) 
по вертикалі використовуючи відсотки неможливе 
без чіткої вказанної висоти для батьківського елементу
Наприклад: top: 10% не спрацює 
без вказання висоти для батьківського елементу
*/

main {
	/* height: 500px; */
}

.section-1 {
	/* 
	position: relative;
	z-index: 1;
	 */
}
.section-2 {
	background-color: rgb(206, 79, 34);
	padding: 15px;
	font-size: 20px;

	/* 
	position: relative;
	z-index: 2;
	 */
}
/*
.block-1 {
	position: relative;
	top: 50px;
	z-index: 2;
}
.block-2 {
	position: relative;
	top: 30px;
	left: 30px;
	z-index: 1;
}
.block-3 {
	position: relative;
	top: 50px;
}
*/

/*
absolute - абсолютне (безумовне) позиціонування.
1) Разом з position: absolute; обов'язково використовуйте 
	властивості для позіціонування (left або right, top або bottom)
2) Об'єкт позіціонується відносно першого батьківського елементу, 
	position якого відмінний від static.
3) Об'єкт втрачає свою блочну сутність. Також втрачає 
	своє положення в коді, та простір який він займав
4) Не можемо вказувати для БЕМ-блоків

Для позиціонування об'єкту (з position: absolute;) 
по вертикалі,використовуючи відсотки, відсоток 
буде братись від висоти батьківського елементу
*/
/*
.section-1 {
	position: relative;
}
.block-1 {
}
.block-2 {
	position: absolute;
	top: 10%;
	left: 10%;
}
.block-3 {
}
*/

/*
fixed - фіксоване позіціанування
1) Разом з position: absolute; обов'язково використовуйте 
	властивості для позіціонування (left або right, top або bottom)
2) Об'єкт втрачає свою блочну сутність. 
	Також втрачає своє положення в коді, та простір який він займав.
3) Завжди позіціонується відносно вікна браузера (в'юпорт).
4) Не приймає участі у скролі.
5) Не можемо вказувати для БЕМ-блоків
*/

/*
.section-1 {
	position: relative;
}
.block-1 {
}
.block-2 {
	position: fixed;
	top: 0;
	left: 0;
}
.block-3 {
}
*/

/* 
sticky - Це гібридне поєднання значень static та fixed. 
Спочатку елемент веде себе як static але після того 
як скролл доходить до його кордону він стає 
fixed та прилипає до зазначеної позиції top або bottom.

!!! Не працює, якщо у батьківських об'єктах присутній 
overflow: hidden;

*/
/*
.block-1 {
	position: sticky;
	top: 0;
	left: 0;
}
.block-2 {
	position: sticky;
	top: 0;
	left: 0;
}
.block-3 {
	position: sticky;
	top: 0;
	left: 0;
}*/

/* Практика */

[class*="__container"] {
	max-width: 830px;
	margin: 0 auto;
	padding-left: 15px;
	padding-right: 15px;
}

.header {
	background-color: #7a956b;
	padding: 15px;
}
.header--fix {
	position: sticky; /* Ще можна fixed */
	width: 100%;
	top: 0;
	left: 0;
	z-index: 50;
}

/* .menu {
} */
.menu__item {
	display: inline-block;
	position: relative;
}
.menu__link {
	background-color: #794f45;
	display: inline-block;
	padding: 10px;
}
.menu__item:hover .menu__link {
	background-color: #aa523d;
}
.menu__item:hover .sub-menu {
	visibility: visible;
}

.sub-menu {
	position: absolute;
	left: 0;
	top: 100%;
	padding-top: 5px;
	color: #000;
	width: 150px;
	visibility: hidden;
}

.sub-menu__item {
	background-color: rgb(212, 212, 20);
}
.sub-menu__link {
	display: inline-block;
	padding: 10px;
}
.sub-menu__link:hover {
	text-decoration: underline;
}

.page {
	padding-top: 30px; /* якщо шапка fixed врахувати її розмір */
	padding-bottom: 100px;
	position: relative;
}
.page__container {
	font-size: 0;
}
.side {
	position: sticky;
	top: 80px;

	font-size: 14px;
	width: 200px;
	padding: 15px;
	vertical-align: top;
	display: inline-block;
	background-color: #77608d;
}
.content {
	font-size: 14px;
	display: inline-block;
	padding: 15px;
	width: 600px;
	background-color: #794f45;
}

.menu-side {
}
.menu-side__item {
	position: relative;
}
.menu-side__item:not(:last-child) {
	margin-bottom: 5px;
}
.menu-side__link {
	background-color: #794f45;
	display: block;
	font-size: 16px;
	position: relative;
	padding: 10px 10px 10px 35px;
}
.menu-side__link::before {
	content: "";
	width: 15px;
	height: 15px;
	border-radius: 50%;
	background-color: yellow;
	position: absolute;
	left: 10px;
	top: 9px;
}

.menu-side__item:hover .menu-side__link {
	background-color: #ac4e37;
}
.menu-side__item:hover .sub-menu-side {
	visibility: visible;
}

.sub-menu-side {
	position: absolute;
	top: 0;
	left: 100%;
	padding-left: 5px;
	width: 200px;
	visibility: hidden;
}

.sub-menu-side__item {
	background-color: #7a956b;
}
.sub-menu-side__link {
	display: block;
	padding: 5px;
}
.sub-menu-side__link:hover {
	text-decoration: underline;
}

.body:not(:last-child) {
	margin-bottom: 30px;
}

.text {
	font-size: 14px;
	line-height: 120%;
}

.image {
	display: inline-block;
	position: relative;
}

.image img {
	max-width: 100%;
}

.image::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	opacity: 0;
	background-color: #000;
}
.image:hover::before {
	opacity: 0.5;
}

.decor-page {
}
.decor-page__item {
	border-radius: 50%;
	width: 300px;
	height: 300px;
	background-color: #7a956b;
	position: absolute;
	right: 0;
	top: 50%;
	margin: -150px -150px 0px 0px;
}
